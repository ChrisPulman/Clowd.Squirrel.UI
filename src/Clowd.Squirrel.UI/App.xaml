<Application
    x:Class="Clowd.Squirrel.UI.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Clowd.Squirrel.UI"
    xmlns:rxNav="https://github.com/ChrisPulman/CrissCross"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    StartupUri="MainWindow.xaml">
    <Application.Resources>
        <ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

            <Color x:Key="WindowBackgroundColor">#252526</Color>

            <SolidColorBrush x:Key="ButtonBackground" Color="#333333" />
            <SolidColorBrush x:Key="ButtonBackgroundHover" Color="#3e3e42" />
            <SolidColorBrush x:Key="ButtonBackgroundPressed" Color="{DynamicResource AccentColor}" />
            <SolidColorBrush x:Key="ButtonBorder" Color="#333333" />
            <SolidColorBrush x:Key="ButtonBorderHover" Color="#3e3e42" />
            <SolidColorBrush x:Key="ButtonBorderPressed" Color="{DynamicResource AccentColor}" />
            <SolidColorBrush x:Key="ButtonText" Color="#d1d1d1" />
            <SolidColorBrush x:Key="ButtonTextHover" Color="#d1d1d1" />
            <SolidColorBrush x:Key="ButtonTextPressed" Color="#d1d1d1" />
            <SolidColorBrush x:Key="ButtonTextDisabled" Color="#515151" />
            <SolidColorBrush x:Key="ButtonDisabled" Color="#FF5F5F5F" />

            <SolidColorBrush x:Key="DataGridBackground" Color="{StaticResource WindowBackgroundColor}" />
            <SolidColorBrush x:Key="DataGridForeground" Color="#d1d1d1" />
            <SolidColorBrush x:Key="DataGridCellBackground" Color="Transparent" />
            <SolidColorBrush x:Key="DataGridCellBackgroundHover" Color="#3e3e42" />
            <SolidColorBrush x:Key="DataGridCellBackgroundSelected" Color="{DynamicResource AccentColor}" />
            <SolidColorBrush x:Key="DataGridCellForeground" Color="#d1d1d1" />
            <SolidColorBrush x:Key="DataGridCellForegroundHover" Color="#d1d1d1" />
            <SolidColorBrush x:Key="DataGridCellForegroundSelected" Color="#d1d1d1" />
            <SolidColorBrush x:Key="DataGridHeaderBackground" Color="Transparent" />
            <SolidColorBrush x:Key="DataGridHeaderBackgroundHover" Color="#3e3e42" />
            <SolidColorBrush x:Key="DataGridHeaderBackgroundPressed" Color="{DynamicResource AccentColor}" />
            <SolidColorBrush x:Key="DataGridHeaderBackgroundSelected" Color="{DynamicResource AccentColor}" />
            <SolidColorBrush x:Key="DataGridHeaderForeground" Color="#d1d1d1" />
            <SolidColorBrush x:Key="DataGridHeaderForegroundHover" Color="#d1d1d1" />
            <SolidColorBrush x:Key="DataGridHeaderForegroundPressed" Color="#d1d1d1" />
            <SolidColorBrush x:Key="DataGridHeaderForegroundSelected" Color="#d1d1d1" />
            <SolidColorBrush x:Key="DataGridGridLines" Color="#333333" />
            <SolidColorBrush x:Key="DataGridDropSeparator" Color="{DynamicResource AccentColor}" />

            <SolidColorBrush x:Key="Hyperlink" Color="{DynamicResource AccentColor}" />
            <SolidColorBrush x:Key="HyperlinkHover" Color="{DynamicResource AccentColor}" />
            <SolidColorBrush x:Key="HyperlinkDisabled" Color="#717171" />

            <SolidColorBrush x:Key="InputBackground" Color="#333333" />
            <SolidColorBrush x:Key="InputBackgroundHover" Color="#3e3e42" />
            <SolidColorBrush x:Key="InputBorder" Color="#333333" />
            <SolidColorBrush x:Key="InputBorderHover" Color="#3e3e42" />
            <SolidColorBrush x:Key="InputText" Color="#d1d1d1" />
            <SolidColorBrush x:Key="InputTextHover" Color="#d1d1d1" />
            <SolidColorBrush x:Key="InputTextDisabled" Color="#717171" />

            <SolidColorBrush x:Key="ItemBackgroundHover" Color="#3e3e42" />
            <SolidColorBrush x:Key="ItemBackgroundSelected" Color="{DynamicResource AccentColor}" />
            <SolidColorBrush x:Key="ItemBorder" Color="#3e3e42" />
            <SolidColorBrush x:Key="ItemText" Color="#d1d1d1" />
            <SolidColorBrush x:Key="ItemTextSelected" Color="#d1d1d1" />
            <SolidColorBrush x:Key="ItemTextHover" Color="#d1d1d1" />
            <SolidColorBrush x:Key="ItemTextDisabled" Color="#717171" />

            <SolidColorBrush x:Key="LinkButtonText" Color="#717171" />
            <SolidColorBrush x:Key="LinkButtonTextHover" Color="#d1d1d1" />
            <SolidColorBrush x:Key="LinkButtonTextPressed" Color="#515151" />
            <SolidColorBrush x:Key="LinkButtonTextDisabled" Color="#515151" />

            <SolidColorBrush x:Key="MenuText" Color="#c1c1c1" />
            <SolidColorBrush x:Key="MenuTextHover" Color="#919191" />
            <SolidColorBrush x:Key="MenuTextSelected" Color="#ffffff" />

            <SolidColorBrush x:Key="AppBarButtonBorder" Color="#919191" />
            <SolidColorBrush x:Key="AppBarButtonBorderHover" Color="#d1d1d1" />
            <SolidColorBrush x:Key="AppBarButtonBorderPressed" Color="#d1d1d1" />
            <SolidColorBrush x:Key="AppBarButtonBorderDisabled" Color="#515151" />
            <SolidColorBrush x:Key="AppBarButtonIconBackgroundPressed" Color="{DynamicResource AccentColor}" />
            <SolidColorBrush x:Key="AppBarButtonIconForegroundPressed" Color="#d1d1d1" />
            <SolidColorBrush x:Key="AppBarButtonText" Color="#d1d1d1" />
            <SolidColorBrush x:Key="AppBarButtonTextHover" Color="#d1d1d1" />
            <SolidColorBrush x:Key="AppBarButtonTextPressed" Color="#d1d1d1" />
            <SolidColorBrush x:Key="AppBarButtonTextDisabled" Color="#515151" />

            <SolidColorBrush x:Key="PopupBackground" Color="#252526" />

            <SolidColorBrush x:Key="ProgressBackground" Color="#333333" />

            <SolidColorBrush x:Key="ScrollBarBackground" Color="#333333" />
            <SolidColorBrush x:Key="ScrollBarThumbBackground" Color="Transparent" />
            <SolidColorBrush x:Key="ScrollBarThumbBackgroundDragging" Color="Transparent" />
            <SolidColorBrush x:Key="ScrollBarThumbBackgroundHover" Color="Transparent" />
            <SolidColorBrush x:Key="ScrollBarThumbBorder" Color="#333333" />
            <SolidColorBrush x:Key="ScrollBarThumbForeground" Color="#717171" />
            <SolidColorBrush x:Key="ScrollBarThumbForegroundDragging" Color="#d1d1d1" />
            <SolidColorBrush x:Key="ScrollBarThumbForegroundHover" Color="#919191" />

            <SolidColorBrush x:Key="SeparatorBackground" Color="#3e3e42" />

            <SolidColorBrush x:Key="SliderSelectionBackground" Color="{DynamicResource AccentColor}" />
            <SolidColorBrush x:Key="SliderSelectionBorder" Color="{DynamicResource AccentColor}" />
            <SolidColorBrush x:Key="SliderThumbBackground" Color="#717171" />
            <SolidColorBrush x:Key="SliderThumbBackgroundDragging" Color="{DynamicResource AccentColor}" />
            <SolidColorBrush x:Key="SliderThumbBackgroundHover" Color="#919191" />
            <SolidColorBrush x:Key="SliderThumbBackgroundDisabled" Color="#333333" />
            <SolidColorBrush x:Key="SliderThumbBorder" Color="#717171" />
            <SolidColorBrush x:Key="SliderThumbBorderDragging" Color="{DynamicResource AccentColor}" />
            <SolidColorBrush x:Key="SliderThumbBorderHover" Color="#919191" />
            <SolidColorBrush x:Key="SliderThumbBorderDisabled" Color="#333333" />
            <SolidColorBrush x:Key="SliderTrackBackground" Color="#333333" />
            <SolidColorBrush x:Key="SliderTrackBorder" Color="#333333" />
            <SolidColorBrush x:Key="SliderTick" Color="#717171" />
            <SolidColorBrush x:Key="SliderTickDisabled" Color="#333333" />

            <SolidColorBrush x:Key="SubMenuText" Color="#d1d1d1" />
            <SolidColorBrush x:Key="SubMenuTextHover" Color="#515151" />
            <SolidColorBrush x:Key="SubMenuTextSelected" Color="#ffffff" />

            <SolidColorBrush x:Key="WindowBackground" Color="{StaticResource WindowBackgroundColor}" />
            <SolidColorBrush
                x:Key="WindowBorder"
                Opacity=".5"
                Color="{DynamicResource AccentColor}" />
            <SolidColorBrush x:Key="WindowBorderActive" Color="{DynamicResource AccentColor}" />
            <!--<SolidColorBrush x:Key="WindowHeaderGradient" Color="Transparent" />-->
            <LinearGradientBrush x:Key="WindowHeaderGradient" Opacity=".1" StartPoint="0, 0" EndPoint="0, 1">
                <GradientStop Offset="0" Color="{DynamicResource AccentColor}" />
                <GradientStop Offset=".3" Color="{DynamicResource AccentColor}" />
                <GradientStop Offset="1" Color="Transparent" />
            </LinearGradientBrush>
            <SolidColorBrush x:Key="WindowText" Color="#FFEFEFEF" />
            <SolidColorBrush x:Key="WindowTextReadOnly" Color="#717171" />

            <Rectangle
                x:Key="WindowBackgroundContent"
                Height="96"
                VerticalAlignment="Top"
                x:Shared="false"
                Fill="{StaticResource WindowHeaderGradient}" />

            <!--  default accent colors and brushes  -->
            <Color x:Key="AccentColor">#FF7A9C3E</Color>
            <SolidColorBrush x:Key="Accent" Color="{DynamicResource AccentColor}" />

            <!--  font settings  -->
            <FontFamily x:Key="DefaultFontFamily">Segoe UI</FontFamily>
            <sys:Double x:Key="DefaultFontSize">16</sys:Double>

            <FontFamily x:Key="FixedFontFamily">Consolas</FontFamily>
            <sys:Double x:Key="FixedFontSize">13.333</sys:Double>

            <sys:Double x:Key="SmallFontSize">12</sys:Double>

            <!--  layout margins  -->
            <Thickness x:Key="RootMargin">-36,-8,-16,-16</Thickness>
            <Thickness x:Key="ContentMargin">16,16,16,88</Thickness>
            <Thickness x:Key="StatusMargin">-16,16,0,0</Thickness>
            <Thickness x:Key="HeaderMargin">0,-28,44,0</Thickness>

            <Thickness x:Key="SplitLeft">0,0,0,0</Thickness>
            <Thickness x:Key="SplitRight">16,0,0,0</Thickness>

            <Style x:Key="ContentRoot" TargetType="FrameworkElement">
                <Setter Property="Margin" Value="{StaticResource ContentMargin}" />
            </Style>

            <Style x:Key="SystemButtonBase" TargetType="ButtonBase">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Border
                                Name="Chrome"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                                <ContentPresenter
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style
                x:Key="AlertButton"
                BasedOn="{StaticResource SystemButtonBase}"
                TargetType="ButtonBase">
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Margin" Value="8" />
                <Setter Property="Padding" Value="4" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Opacity" Value=".7" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Opacity" Value=".4" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style
                x:Key="SystemButton"
                BasedOn="{StaticResource SystemButtonBase}"
                TargetType="ButtonBase">
                <Setter Property="Width" Value="32" />
                <Setter Property="Height" Value="24" />
                <Setter Property="Foreground" Value="{DynamicResource ButtonText}" />
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundHover}" />
                        <Setter Property="Foreground" Value="{DynamicResource ButtonTextHover}" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressed}" />
                        <Setter Property="Foreground" Value="{DynamicResource ButtonTextPressed}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{DynamicResource ButtonTextDisabled}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style
                x:Key="SystemCloseButton"
                BasedOn="{StaticResource SystemButton}"
                TargetType="ButtonBase">
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundHover}" />
                        <Setter Property="Foreground" Value="{DynamicResource ButtonTextHover}" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Background" Value="#e51400" />
                        <Setter Property="Foreground" Value="White" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{DynamicResource ButtonTextDisabled}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style
                x:Key="SystemButtonLink"
                BasedOn="{StaticResource SystemButtonBase}"
                TargetType="ButtonBase">
                <Setter Property="Foreground" Value="{DynamicResource LinkButtonText}" />
                <Setter Property="Width" Value="NaN" />
                <Setter Property="Height" Value="NaN" />
                <Setter Property="FontFamily" Value="Segoe UI" />
                <Setter Property="FontSize" Value="11" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Border
                                Name="Chrome"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                                <TextBlock
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    DataContext="{TemplateBinding Content}"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                    Text="{Binding Converter={StaticResource ToUpperConverter}}" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
                <Style.Triggers>
                    <Trigger Property="IsMouseOver" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource LinkButtonTextHover}" />
                    </Trigger>
                    <Trigger Property="IsPressed" Value="True">
                        <Setter Property="Foreground" Value="{DynamicResource LinkButtonTextPressed}" />
                    </Trigger>
                    <Trigger Property="IsEnabled" Value="false">
                        <Setter Property="Foreground" Value="{DynamicResource LinkButtonTextDisabled}" />
                    </Trigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="AppBarBack" TargetType="{x:Type ButtonBase}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Foreground" Value="{DynamicResource AppBarButtonText}" />
                <Setter Property="Padding" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Grid
                                x:Name="grid"
                                MaxWidth="100"
                                Margin="{TemplateBinding Padding}"
                                Background="Transparent">
                                <StackPanel>
                                    <Grid Width="40" Height="40">
                                        <Ellipse
                                            x:Name="ellipse"
                                            VerticalAlignment="Stretch"
                                            Stroke="{DynamicResource AppBarButtonBorder}"
                                            StrokeThickness="1" />
                                        <Path
                                            x:Name="icon"
                                            Width="30"
                                            Height="30"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Data="F1 M 57,42L 57,34L 32.25,34L 42.25,24L 31.75,24L 17.75,38L 31.75,52L 42.25,52L 32.25,42L 57,42 Z "
                                            Fill="{TemplateBinding Foreground}"
                                            Stretch="Uniform" />
                                    </Grid>
                                    <TextBlock
                                        MaxWidth="88"
                                        MaxHeight="32"
                                        Margin="0,0,2,0"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        DataContext="{TemplateBinding Content}"
                                        FontSize="12"
                                        Foreground="{TemplateBinding Foreground}"
                                        Text="{Binding}"
                                        TextAlignment="Center"
                                        TextTrimming="WordEllipsis"
                                        TextWrapping="Wrap" />
                                </StackPanel>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource AppBarButtonTextHover}" />
                                    <Setter TargetName="ellipse" Property="Stroke" Value="{DynamicResource AppBarButtonBorderHover}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource AppBarButtonTextPressed}" />
                                    <Setter TargetName="ellipse" Property="Stroke" Value="{DynamicResource AppBarButtonBorderPressed}" />
                                    <Setter TargetName="ellipse" Property="Fill" Value="{DynamicResource AppBarButtonIconBackgroundPressed}" />
                                    <Setter TargetName="icon" Property="Fill" Value="{DynamicResource AppBarButtonIconForegroundPressed}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource AppBarButtonTextDisabled}" />
                                    <Setter TargetName="ellipse" Property="Stroke" Value="{DynamicResource AppBarButtonBorderDisabled}" />
                                </Trigger>
                                <Trigger Property="IsFocused" Value="true">
                                    <Setter TargetName="ellipse" Property="Stroke" Value="{DynamicResource Accent}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="AppBarExit" TargetType="{x:Type ButtonBase}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Foreground" Value="{DynamicResource AppBarButtonText}" />
                <Setter Property="Padding" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Grid
                                x:Name="grid"
                                MaxWidth="100"
                                Margin="{TemplateBinding Padding}"
                                Background="Transparent">
                                <StackPanel>
                                    <Grid Width="40" Height="40">
                                        <Ellipse
                                            x:Name="ellipse"
                                            VerticalAlignment="Stretch"
                                            Stroke="{DynamicResource AppBarButtonBorder}"
                                            StrokeThickness="1" />
                                        <Path
                                            x:Name="icon"
                                            Width="25"
                                            Height="25"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Data="F1 M 51.0071,19.0027L 51.0071,27.0038L 48.0067,27.0038L 48.0067,22.0031L 25.0035,22.0031L 25.0035,54.0075L 48.0067,54.0075L 48.0067,49.0068L 51.0071,49.0068L 51.0071,57.008L 22.1698,57.008L 22.0031,19.0027L 51.0071,19.0027 Z M 30.0042,35.0049L 45.2563,35.0049L 37.005,28.0039L 47.0066,28.0039L 58.5082,38.0053L 47.0066,48.0067L 37.005,48.0067L 45.2563,41.0057L 30.0042,41.0057L 30.0042,35.0049 Z "
                                            Fill="{TemplateBinding Foreground}"
                                            Stretch="Uniform" />
                                    </Grid>
                                    <TextBlock
                                        MaxWidth="88"
                                        MaxHeight="32"
                                        Margin="0,0,2,0"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        DataContext="{TemplateBinding Content}"
                                        FontSize="12"
                                        Foreground="{TemplateBinding Foreground}"
                                        Text="{Binding}"
                                        TextAlignment="Center"
                                        TextTrimming="WordEllipsis"
                                        TextWrapping="Wrap" />
                                </StackPanel>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource AppBarButtonTextHover}" />
                                    <Setter TargetName="ellipse" Property="Stroke" Value="{DynamicResource AppBarButtonBorderHover}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource AppBarButtonTextPressed}" />
                                    <Setter TargetName="ellipse" Property="Stroke" Value="{DynamicResource AppBarButtonBorderPressed}" />
                                    <Setter TargetName="ellipse" Property="Fill" Value="{DynamicResource AppBarButtonIconBackgroundPressed}" />
                                    <Setter TargetName="icon" Property="Fill" Value="{DynamicResource AppBarButtonIconForegroundPressed}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource AppBarButtonTextDisabled}" />
                                    <Setter TargetName="ellipse" Property="Stroke" Value="{DynamicResource AppBarButtonBorderDisabled}" />
                                </Trigger>
                                <Trigger Property="IsFocused" Value="true">
                                    <Setter TargetName="ellipse" Property="Stroke" Value="{DynamicResource Accent}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="AppBarPrint" TargetType="{x:Type ButtonBase}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Foreground" Value="{DynamicResource AppBarButtonText}" />
                <Setter Property="Padding" Value="1" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Grid
                                x:Name="grid"
                                MaxWidth="100"
                                Margin="{TemplateBinding Padding}"
                                Background="Transparent">
                                <StackPanel>
                                    <Grid Width="40" Height="40">
                                        <Ellipse
                                            x:Name="ellipse"
                                            VerticalAlignment="Stretch"
                                            Stroke="{DynamicResource AppBarButtonBorder}"
                                            StrokeThickness="1" />
                                        <Path
                                            x:Name="icon"
                                            Width="25"
                                            Height="25"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            Data="F1 M 25,27L 25,17L 51,17L 51,27L 47,27L 47,21L 29,21L 29,27L 25,27 Z M 16,28L 60,28L 60,51L 52,51L 52,46L 55,46L 55,33L 21,33L 21,46L 24,46L 24,51L 16,51L 16,28 Z M 25,39L 28,39L 28,52L 35,52L 35,59L 48,59L 48,39L 51,39L 51,62L 33,62L 25,54L 25,39 Z M 46,55L 38,55L 38,52L 46,52L 46,55 Z M 46,49L 30,49L 30,46L 46,46L 46,49 Z M 46,43L 30,43L 30,40L 46,40L 46,43 Z "
                                            Fill="{TemplateBinding Foreground}"
                                            Stretch="Uniform" />
                                    </Grid>
                                    <TextBlock
                                        MaxWidth="88"
                                        MaxHeight="32"
                                        Margin="0,0,2,0"
                                        VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                        DataContext="{TemplateBinding Content}"
                                        FontSize="12"
                                        Foreground="{TemplateBinding Foreground}"
                                        Text="{Binding}"
                                        TextAlignment="Center"
                                        TextTrimming="WordEllipsis"
                                        TextWrapping="Wrap" />
                                </StackPanel>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource AppBarButtonTextHover}" />
                                    <Setter TargetName="ellipse" Property="Stroke" Value="{DynamicResource AppBarButtonBorderHover}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource AppBarButtonTextPressed}" />
                                    <Setter TargetName="ellipse" Property="Stroke" Value="{DynamicResource AppBarButtonBorderPressed}" />
                                    <Setter TargetName="ellipse" Property="Fill" Value="{DynamicResource AppBarButtonIconBackgroundPressed}" />
                                    <Setter TargetName="icon" Property="Fill" Value="{DynamicResource AppBarButtonIconForegroundPressed}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource AppBarButtonTextDisabled}" />
                                    <Setter TargetName="ellipse" Property="Stroke" Value="{DynamicResource AppBarButtonBorderDisabled}" />
                                </Trigger>
                                <Trigger Property="IsFocused" Value="true">
                                    <Setter TargetName="ellipse" Property="Stroke" Value="{DynamicResource Accent}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="BaseButtonStyle" TargetType="{x:Type ButtonBase}">
                <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                <Setter Property="Background" Value="{DynamicResource ButtonBackground}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorder}" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="Foreground" Value="{DynamicResource ButtonText}" />
                <Setter Property="HorizontalContentAlignment" Value="Center" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="Padding" Value="16,3,16,5" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ButtonBase}">
                            <Border
                                Name="Chrome"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                SnapsToDevicePixels="true">
                                <ContentPresenter
                                    Name="Presenter"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Border>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource ButtonTextDisabled}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ButtonBackgroundHover}" />
                                    <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderHover}" />
                                    <Setter Property="Foreground" Value="{DynamicResource ButtonTextHover}" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Background" Value="{DynamicResource ButtonBackgroundPressed}" />
                                    <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderPressed}" />
                                    <Setter Property="Foreground" Value="{DynamicResource ButtonTextPressed}" />
                                </Trigger>
                                <Trigger Property="IsFocused" Value="true">
                                    <Setter TargetName="Chrome" Property="BorderBrush" Value="{DynamicResource Accent}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style
                x:Key="{x:Type ToggleButton}"
                BasedOn="{StaticResource BaseButtonStyle}"
                TargetType="{x:Type ToggleButton}" />

            <Style
                x:Key="{x:Type RepeatButton}"
                BasedOn="{StaticResource BaseButtonStyle}"
                TargetType="{x:Type RepeatButton}">
                <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false" />
            </Style>

            <Style
                x:Key="{x:Type Button}"
                BasedOn="{StaticResource BaseButtonStyle}"
                TargetType="{x:Type Button}" />

            <Style TargetType="{x:Type TextBlock}">
                <Setter Property="VerticalAlignment" Value="Center" />
            </Style>

            <Style x:Key="imageButton" TargetType="{x:Type Button}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Image
                                x:Name="img"
                                Width="19"
                                Height="19"
                                Opacity="1.0"
                                Source="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"
                                Stretch="UniformToFill" />
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Effect">
                                        <Setter.Value>
                                            <DropShadowEffect
                                                Direction="315"
                                                Opacity="0.8"
                                                ShadowDepth="3"
                                                Color="Black" />
                                        </Setter.Value>
                                    </Setter>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter TargetName="img" Property="Opacity" Value="0.3" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="LinkButton" TargetType="{x:Type Button}">
                <Setter Property="VerticalAlignment" Value="Center" />
                <Setter Property="HorizontalAlignment" Value="Left" />
                <Setter Property="Cursor" Value="Hand" />
                <Setter Property="Foreground" Value="#408DD9" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <TextBlock
                                Background="{TemplateBinding Background}"
                                Text="{TemplateBinding Content}"
                                TextDecorations="Underline" />
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Foreground" Value="Red" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="Red" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Foreground" Value="#FF515050" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="NavigationWindowStyle" TargetType="{x:Type rxNav:NavigationWindow}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type rxNav:NavigationWindow}">
                            <Grid>
                                <Border x:Name="WindowBorder">
                                    <Border.Background>
                                        <SolidColorBrush x:Name="WindowBorderBackground" Color="{DynamicResource WindowBackgroundColor}" />
                                    </Border.Background>
                                    <Grid>
                                        <Border BorderBrush="{Binding BorderBrush}" BorderThickness="1">
                                            <AdornerDecorator>
                                                <Grid x:Name="LayoutRoot">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="65" />
                                                        <RowDefinition Height="*" />
                                                        <RowDefinition Height="80" />
                                                    </Grid.RowDefinitions>
                                                    <!--  HEADER START  -->
                                                    <Rectangle
                                                        x:Name="HeaderBackground"
                                                        Grid.RowSpan="5"
                                                        Height="96"
                                                        VerticalAlignment="Top"
                                                        Fill="{DynamicResource WindowHeaderGradient}" />
                                                    <!--  HEADER END  -->
                                                    <!--  NAV BAR START  -->
                                                    <StackPanel
                                                        Grid.RowSpan="2"
                                                        Margin="5,5,0,0"
                                                        HorizontalAlignment="Left"
                                                        VerticalAlignment="Top"
                                                        Background="{x:Null}"
                                                        Orientation="Horizontal">
                                                        <!--  back button Start  -->
                                                        <Button
                                                            x:Name="GoBackButton"
                                                            Margin="5,0"
                                                            Style="{DynamicResource AppBarBack}" />
                                                        <!--  back button End  -->
                                                        <!--  Title Logo Start  -->
                                                        <Image
                                                            x:Name="Logo"
                                                            Height="40"
                                                            VerticalAlignment="Top" />
                                                        <!--  Title Logo End  -->
                                                        <!--  Main Title Begin  -->
                                                        <TextBlock
                                                            x:Name="MainTitle"
                                                            Margin="10,0"
                                                            VerticalAlignment="Top"
                                                            FontSize="30" />
                                                        <!--  Main Title End  -->
                                                        <!--  Nav Bar Begin  -->
                                                        <StackPanel
                                                            x:Name="NavBarItems"
                                                            HorizontalAlignment="Left"
                                                            VerticalAlignment="Center"
                                                            Orientation="Horizontal" />
                                                        <!--  Nav Bar End  -->
                                                    </StackPanel>
                                                    <!--  NAV BAR END  -->
                                                    <!--  CONTENT FRAME START  -->
                                                    <rxNav:ViewModelRoutedViewHost
                                                        x:Name="NavigationFrame"
                                                        Grid.Row="1"
                                                        HorizontalAlignment="Stretch"
                                                        VerticalAlignment="Stretch"
                                                        HostName="{TemplateBinding Name}"
                                                        NavigateBackIsEnabled="{TemplateBinding NavigateBackIsEnabled}"
                                                        Transition="{TemplateBinding Transition}" />
                                                    <!--  CONTENT FRAME END  -->
                                                    <!--  APP BAR START  -->
                                                    <Grid
                                                        x:Name="BottomAppBar"
                                                        Grid.Row="2"
                                                        HorizontalAlignment="Stretch"
                                                        Background="{DynamicResource Accent}">
                                                        <Grid.ColumnDefinitions>
                                                            <ColumnDefinition Width="Auto" />
                                                            <ColumnDefinition />
                                                        </Grid.ColumnDefinitions>
                                                        <StackPanel
                                                            Margin="5"
                                                            HorizontalAlignment="Left"
                                                            Orientation="Horizontal" />
                                                        <StackPanel
                                                            Grid.Column="1"
                                                            Margin="5"
                                                            HorizontalAlignment="Right"
                                                            Orientation="Horizontal">

                                                            <Button
                                                                x:Name="ExitApp"
                                                                Margin="5,0"
                                                                HorizontalAlignment="Right"
                                                                Content="Exit"
                                                                Style="{DynamicResource AppBarExit}"
                                                                ToolTip="Exit Application" />
                                                        </StackPanel>
                                                    </Grid>
                                                    <!--  APP BAR END  -->
                                                </Grid>
                                            </AdornerDecorator>
                                        </Border>
                                    </Grid>
                                </Border>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </Application.Resources>
</Application>
